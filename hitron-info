#!/usr/bin/python
# -*- coding: utf-8 -*-

# "Con quien carallo estoy conectado"
# Copyright (C) 2014 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from src import fetchers
import argparse


def read_params ():
    import ConfigParser  
    cfg = ConfigParser.ConfigParser()  
    cfg.read(["config_params.cfg"])  
    if cfg.has_option("login_hitron", "usuario"):  
        usuario = cfg.get("login_hitron", "usuario")  
    else:  
        raise ValueError("The user is not found in the configuration file.")    
    if cfg.has_option("login_hitron", "password"):  
        password = cfg.get("login_hitron", "password")  
    else:  
        raise ValueError("The password is not found in the configuration file.")
    return (usuario, password) 

def parse_params ():
    parser = argparse.ArgumentParser(add_help=False, \
        description='returns the current router hitron connections')
    parser.add_argument("-d", "--direction", required=False, default="All", \
        choices=['Incoming','Outgoing'])
    args = parser.parse_args()
    return args.direction

def filter_connections(connections, direction):
    if direction != 'All':
        return [x for x in connections if x.dir == direction]
    else:
        return connections  


if __name__ == '__main__':
    (usuario, password) = read_params()
    direction = parse_params()

    connection_hitron = fetchers.HitronConnectionsFetcher(usuario, password)
    connections_active = connection_hitron.get_connections()

    filter_connections = filter_connections(connections_active,direction)

    print "[" + ",".join([x.json_dump()  for x in filter_connections]) + "]"